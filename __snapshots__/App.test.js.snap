// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App integration tests should render correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <View>
    <TextInput
      clearButtonMode="while-editing"
      keyboardType="numeric"
      onSubmitEditing={[Function]}
      placeholder="Numeric variable"
      returnKeyType="done"
      style={
        {
          "backgroundColor": "#f1faee",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 48,
          "margin": 12,
          "paddingLeft": 8,
          "paddingRight": 8,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "textAlign": "center",
          "width": 192,
        }
      }
    />
  </View>
  <View
    style={
      {
        "flexDirection": "row",
        "height": 48,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#f1faee",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 32,
          "justifyContent": "center",
          "margin": 4,
          "opacity": 1,
          "paddingLeft": 4,
          "paddingRight": 4,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "width": 32,
        }
      }
      testID="addOperator"
    >
      <Text>
        +
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 32,
          "justifyContent": "center",
          "margin": 4,
          "opacity": 1,
          "paddingLeft": 4,
          "paddingRight": 4,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "width": 32,
        }
      }
      testID="substractOperator"
    >
      <Text>
        -
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 32,
          "justifyContent": "center",
          "margin": 4,
          "opacity": 1,
          "paddingLeft": 4,
          "paddingRight": 4,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "width": 32,
        }
      }
      testID="multiplyOperator"
    >
      <Text>
        *
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 32,
          "justifyContent": "center",
          "margin": 4,
          "opacity": 1,
          "paddingLeft": 4,
          "paddingRight": 4,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "width": 32,
        }
      }
      testID="divideOperator"
    >
      <Text>
        /
      </Text>
    </View>
  </View>
  <View>
    <TextInput
      clearButtonMode="while-editing"
      keyboardType="numeric"
      onSubmitEditing={[Function]}
      placeholder="Numeric variable"
      returnKeyType="done"
      style={
        {
          "backgroundColor": "#f1faee",
          "borderRadius": 8,
          "fontSize": 22,
          "height": 48,
          "margin": 12,
          "paddingLeft": 8,
          "paddingRight": 8,
          "shadowOffset": {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.75,
          "shadowRadius": 1,
          "textAlign": "center",
          "width": 192,
        }
      }
    />
  </View>
  <Text>
    NaN
  </Text>
</RCTSafeAreaView>
`;
